<template>
  <view>
    <cc-header title="所有模块" back="{{isBack}}">
      <text bindtap="save" wx:if="{{!isBack}}">完成</text>
    </cc-header>
    <view class="j_save">
        按住拖动排序
    </view>
    
    <view style="position: relative; z-index: 199;">
      <view class="touchView" style="height:250px;" catchtouchstart="scrollTouchStart"
        catchtouchmove="scrollTouchMove" catchtouchend="scrollTouchEnd">
      </view>
      <movable-area class="moveable_row {{movableViewPosition.className}}" style="height: 250px;">
        <movable-view style="height: 50px; width: 100%; background-color: #fff;"
          direction="vertical" x="{{movableViewPosition.x}}" y="{{movableViewPosition.y}}"
          damping="9999" friction="9999">
          <ui-row height="50">
            <ui-col width="45" vertical-align="middle" align="center">
              <icon type="circle" size="16" wx:if="{{!movableViewPosition.data.checked}}"></icon>
              <icon type="success" size="16" wx:if="{{movableViewPosition.data.checked}}"></icon>
            </ui-col>
            <ui-col vertical-align="middle">
              {{movableViewPosition.data.text}}
            </ui-col>
            <ui-col width="40" vertical-align="middle" align="center">
              <i class="iconfont icon-tuozhuaicaidandaohang"></i>
            </ui-col>
          </ui-row>
        </movable-view>
      </movable-area>
      <ui-row-list>
        <checkbox-group bindchange="checkboxChange">
          <label wx:for="{{optionsListData}}" wx:key="*this">
            <ui-row height="50" border-bottom class="{{item.selectClass}}">
              <ui-col width="45" vertical-align="middle" align="center">
                <icon type="circle" size="16" wx:if="{{!item.checked}}"></icon>
                <icon type="success" size="16" wx:if="{{item.checked}}"></icon>
              </ui-col>
              <ui-col vertical-align="middle">
                <checkbox class="weui-check" value="{{item.value}}" checked="{{item.checked}}"></checkbox>
                {{item.text}}
              </ui-col>
              <ui-col width="40" vertical-align="middle" align="center">
                  <i class="iconfont icon-tuozhuaicaidandaohang"></i>
              </ui-col>
            </ui-row>
          </label>
        </checkbox-group>
      </ui-row-list>
    </view>
  </view>
</template>

<script>
import api from '../../static/utils/api'
import Tips from '../../static/utils/tips'
export default {
  config: {
    usingComponents: {
      'cc-header': '../../packages/cc-header'
    }
  },
  data: {
    isBack: true,
    scrollPosition:{
      everyOptionCell:50,
      top:wx.STATUS_BAR_HEIGHT + wx.DEFAULT_HEADER_HEIGHT + 38,
      scrollViewWidth:375,
      windowViewHeight:1000
    },
    movableViewPosition:{
      x:0,
      y:0,
      className:"none",
      data:{}
    },
    selectItemInfo:{
      value:"",
      selectIndex: -1,
      selectPosition:0,
    },
    optionsListData: []
  },
  onLoad () {
    // 开始加载页面
    var systemInfo= wx.getSystemInfoSync();
    var optionsList = this.optionsDataTranlate(getApp().globalData.customData.mobileSort,"");
    // 开始加载页面
    var scrollViewWidth = systemInfo.windowWidth;
    this.setData({
      optionsListData:optionsList,
      'scrollPosition.scrollViewWidth':scrollViewWidth,
      'scrollPosition.windowViewHeight':systemInfo.windowHeight
    });
  },
  save () {
    let data = []
    this.data.optionsListData.forEach(item => {
      data.push({text: item.text, value: item.value, checked: item.checked})
    })
    getApp().globalData.customData.mobileSort = data
    api.customUpdate({
      data: {
        content: JSON.stringify(getApp().globalData.customData)
      },
      method: 'post'
    }).then(res => {
      if (res.success) {
        getApp().globalData.customData = data
        Tips.success("保存成功")
        this.setData({
          isBack: true
        })
      }
    })
  },
  optionsDataTranlate (optionsList,selectClass) {
    for(var i=0,j=optionsList.length;i<j;i++){
      optionsList[i].selectClass = selectClass;
    }
    return optionsList
  },
  getOptionInfo (code) {
    for(var i=0,j=this.data.optionsListData.length;i<j;i++){
      var optionData= this.data.optionsListData[i];
      if(optionData.value == code){
        optionData.selectIndex = i
        return optionData;
      }
    }
    return {}
  },
  getPositionDomByXY (potions) {
    var y = potions.y-this.data.scrollPosition.top;
    var optionsListData = this.data.optionsListData;
    var everyOptionCell = this.data.scrollPosition.everyOptionCell;
    for(var i=0,j=optionsListData.length;i<j;i++){
        if(y>=i*everyOptionCell&&y<(i+1)*everyOptionCell){
            return optionsListData[i];
        }
    }
    return optionsListData[0]
  },
  scrollTouchStart (event) {
    var firstTouchPosition = {
      x:event.changedTouches[0].pageX,
      y:event.changedTouches[0].pageY
    }
    var domData = this.getPositionDomByXY(firstTouchPosition);
    console.log("domData:",domData);
    //movable-area滑块位置处理
    var movableX = 0;
    var movableY = firstTouchPosition.y-this.data.scrollPosition.top-this.data.scrollPosition.everyOptionCell/2;

    this.setData({
      movableViewPosition:{
        x:movableX,
        y:movableY,
        className:"",
        data:domData
      }
    })
    var secCode = domData.value;
    var secInfo = this.getOptionInfo(secCode);
    secInfo.selectPosition =  event.changedTouches[0].clientY;
    secInfo.selectClass = "dragSelected";

    this.data.optionsListData[secInfo.selectIndex].selectClass = "dragSelected";
    var optionsListData = this.data.optionsListData;

    this.setData({
      selectItemInfo:secInfo,
      optionsListData:optionsListData,
      'scrollPosition.selectIndex':secInfo.selectIndex
    })
  },
  scrollTouchMove (event) {
    var selectItemInfo = this.data.selectItemInfo;
    var selectPosition = selectItemInfo.selectPosition;
    var moveDistance   = event.changedTouches[0].clientY;
    var everyOptionCell = this.data.scrollPosition.everyOptionCell;
    var optionsListData = this.data.optionsListData;
    var selectIndex = selectItemInfo.selectIndex;

    console.log("event.changedTouches:",event.changedTouches);
    //movable-area滑块位置处理
    var movableX = 0;
    var movableY = event.changedTouches[0].pageY-this.data.scrollPosition.top-this.data.scrollPosition.everyOptionCell/2;

    this.setData({
      movableViewPosition:{
        x:movableX,
        y:movableY,
        className:"",
        data:this.data.movableViewPosition.data
      }
    })
    if(moveDistance - selectPosition > 0 && selectIndex < optionsListData.length - 1){
      if (optionsListData[selectIndex].value == selectItemInfo.value) {
        optionsListData.splice(selectIndex, 1);
        optionsListData.splice(++selectIndex, 0, selectItemInfo);
        selectPosition += everyOptionCell;
      }
    }

    if (moveDistance - selectPosition < 0 && selectIndex > 0) {
      if (optionsListData[selectIndex].value == selectItemInfo.value) {
        optionsListData.splice(selectIndex, 1);
        optionsListData.splice(--selectIndex, 0, selectItemInfo);
        selectPosition -= everyOptionCell;
      }
    }
      
    this.setData({
      'selectItemInfo.selectPosition': selectPosition,
      'selectItemInfo.selectIndex': selectIndex,
      optionsListData: optionsListData
    });
  },
  scrollTouchEnd (event) {
    console.log(event);
    var optionsListData = this.optionsDataTranlate(this.data.optionsListData,"")
    this.setData({
      optionsListData:optionsListData,
      'movableViewPosition.className':"none",
      isBack: false
    })
  },
  checkboxChange (e) {
    var checkboxItems = this.data.optionsListData, values = e.detail.value
    for (var i = 0, lenI = checkboxItems.length; i < lenI; ++i) {
      checkboxItems[i].checked = false
      for (var j = 0, lenJ = values.length; j < lenJ; ++j) {
        if(checkboxItems[i].value == values[j]){
          checkboxItems[i].checked = true
          break
        }
      }
    }
    this.setData({
      optionsListData:checkboxItems,
      isBack: false
    })
  }
}
</script>

<style lang="less">
page{
  background-color:#f1f1f1;
}
.j_save {
  background-color:#f1f1f1;
  text-align:right;
  padding:0 15px;
  color:#999;
  font-size:12px;
  height: 38px;
  line-height: 38px;
}
.weui-check {
  position:absolute;
  left:-9999px;
}
.icon-tuozhuaicaidandaohang{
  color: #999
}
.ui-row-border-bottom:after {
  left: 40px;
}

// 排序css
.touchView{z-index: 200; width: 150px;position: absolute;top: 0;left:275px; top: 0;}
.moveable_row{
  height: 0px;
  width: 100%; position: absolute;top: 0;left: 0; z-index: 100;
  &.none{
    display: none !important;
  }
  .weui-cell{
    background:#fff;
    box-shadow: 0 0 12px rgba(0,0,0,.2)
  }
}
.dragSelected{ background-color: #ccc;}
</style>
