<template>
  <view>
    <cc-header title="{{title}}" count="{{count}}" back="{{!selected}}">
      <text bindtap="toggleAll" wx:if="{{selected && !toggle}}">全选</text>
      <text bindtap="toggleAll" wx:if="{{selected && toggle}}">全不选</text>
    </cc-header>
    <!-- head -->
    <cc-search value="{{params.title}}" type="news" list="{{cateList}}" bindinput="search" bindchange="cateChange"></cc-search>
    <cc-lan lan="{{true}}" top="99" type="news" bindchange="lanChange"></cc-lan>
    
    <!-- body -->
    <ui-row-list>
      <ui-row height="114r" border-bottom wx:for="{{list}}" wx:key="*this">
        <ui-col vertical-align="middle" align="center" width="123r" data-index="{{index}}" bindtap="toggle">
          <icon type="circle" size="18" wx:if="{{!item._checked}}"></icon>
          <icon type="success" size="18" wx:if="{{item._checked}}"></icon>
        </ui-col>
        <ui-col class="text" vertical-align="middle" data-item="{{item}}" bindtap="item">
          {{item.title}}
          <view class="desc"> {{item.addTime}} <text>{{item.display === '00' ? '隐藏' : '显示'}}</text> 人气：{{item.viewsum || 0}} </view>
        </ui-col>
      </ui-row>
    </ui-row-list>
    <cc-loadmore more="{{more}}"></cc-loadmore>

    <!-- footer -->
    <ui-fixed-view bottom="0;z-index:700" left="0" right="0" wx:if="{{selected}}">
      <ui-row height="60" border-top class="fixed_btn">
        <ui-col span="3" vertical-align="middle" align="center" bindtap="batchCopy">
          <i class="iconfont icon-fuzhi"></i>
          <view class="desc">复制</view>
        </ui-col>
        <ui-col span="3" vertical-align="middle" align="center">
          <cc-category title="{{false}}" type="news" categoryList="{{cateList}}" bindchange="batchMove">
            <i class="iconfont icon-folder-add-fill2"></i>
            <view class="desc">移动</view>
          </cc-category>
        </ui-col>
        <ui-col span="3" vertical-align="middle" align="center" bindtap="batchDel">
          <i class="iconfont icon-delete-fill"></i>
          <view class="desc">删除</view>
        </ui-col>
        <ui-col span="3" vertical-align="middle" align="center" data-show="{{ true }}" bindtap="more">
          <i class="iconfont icon-gengduo"></i>
          <view class="desc">更多</view>
        </ui-col>
      </ui-row>
    </ui-fixed-view>
    
    <view style="height:70px" wx:if="{{selected}}"></view>
    <ui-mask show="{{showMask}}" hide-delay="500">
      <view class="mask_btn">
        <view class="btn">
          <view data-show="{{'01'}}" bindtap="batchDisplay">显示</view>
          <view data-show="{{'00'}}" bindtap="batchDisplay">隐藏</view>
        </view>
        <button data-show="{{ false }}" bindtap="more">取消</button>
      </view>
    </ui-mask>
  </view>
</template>

<script>
import api from '../../static/utils/api'
import Tips from '../../static/utils/tips'
import Utils from '../../static/utils/utils'
export default {
  config: {
    usingComponents: {
      'cc-loadmore': '../../packages/cc-loadmore',
      'cc-header': '../../packages/cc-header',
      'cc-search': '../../packages/cc-search',
      'cc-lan': '../../packages/cc-lan',
      'cc-category': '../../packages/cc-category'
    }
  },
  data: {
    title: '新闻管理',
    list: [],
    params: {
      page: 1,
      pageSize: 16,
      title: ''
    },
    count: 0,
    more: {},
    cateList: [],
    selected: false, //选中状态
    ids: '', // 选中项
    toggle: false, // 全选切换状态 
    showMask: false // 更多
  },
  onLoad () {
    this.get()
    let that = this
    getApp().getNewsCategory(res => {
      that.setData({
        cateList: res
      })
    })
  },
  get () {
    this.setData({
      ids: ''
    })
    Utils.loading(this)
    api.news({
      data: this.data.params
    }).then(res => {
      if (res.success) {
        res.attributes.data.forEach(item => {
          item.addTime = Utils.formatTime(item.addTime)
          item._checked = false
        })
        Utils.scrollList(this, res, '没有更多新闻')
      }
    })
  },
  // 搜索
  search (e) {
    this.data.params.page = 1
    this.data.params.title = e.detail
    this.setData({
      list: [],
      params: this.data.params
    })
    this.get()
  },
  lanChange () {
    this.data.params.page = 1
    this.data.params.title = ''
    this.setData({
      list: [],
      params: this.data.params
    })
    this.get()
  },
  cateChange (e) {
    this.data.params.page = 1
    this.data.params.category = e.detail
    this.setData({
      list: [],
      params: this.data.params
    })
    this.get()
  },
  // 全选
  toggleAll () {
    let list = this.data.list
    let toggle = !this.data.toggle
    list.forEach(item => {
      item._checked = toggle
    })
    this.setData({
      list: list,
      toggle: toggle
    })
    this.initSelcted()
  },
  toggle (e) {
    let list = this.data.list
    list[e.currentTarget.dataset.index]._checked = !list[e.currentTarget.dataset.index]._checked
    this.setData({
      list: list,
      selected: true
    })
    this.initSelcted ()
  },
  initSelcted () {
    let list = this.data.list
    let ids = ''
    list.forEach(item => {
      if (item._checked) {
        ids = ids ? (ids + ',' + item.newsId) : item.newsId
      }
    })
    let number = ids ? ids.split(',').length : 0
    this.setData({
      ids: ids,
      title: '已选择' + number + '条新闻'
    })
  },
  item (e) {
    let item = e.currentTarget.dataset.item
    if (this.data.selected) {
      this.setData({
        selected: false,
        title: '新闻管理'
      })
    } else {
      wx.navigateTo({
        url: 'newsDetail?id=' + item.newsId
      })
    }
  },
  // 批量
  batchCopy () {
    Utils.batchCopy(this, 'news/copy', {newsIds: this.data.ids})
  },
  batchMove (e) {
    Utils.batchMove(this, 'news', e.detail)
  },
  batchDel () {
    Utils.batchDel(this, 'news')
  },
  batchDisplay (e) {
    let display = e.currentTarget.dataset.show
    Utils.batchDisplay(this, 'news/display', {
      newsIds: this.data.ids,
      display: display
    })
  },
  more (e) {
    let show = e.currentTarget.dataset.show
    this.setData({
      showMask: show
    })
  },
  // 加载更多
  onReachBottom () {
    Utils.loadMore(this)
  }
}
</script>

<style lang="less">
page{
  background: #f1f1f1
}
.ui-row-list > .ui-row:not(:last-child):after {
  left: 123rpx;
}
.ui-row-list{
  .text{
    color: #4e4e4e;
    .desc{
      color: #9f9f9f;
      font-size: 12px;
      text{
        padding: 0 5px
      }
    }
  }
  &.ui-row-border-bottom:after {
    left: 40px;
  }
}
</style>
