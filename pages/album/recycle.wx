<template>
  <view>
    <cc-header title="{{title}}" width="{{width}}" back="{{!selected}}">
      <text bindtap="back" wx:if="{{!selected}}">{{catelogName}}</text>
      <view bindtap="toggleAll" wx:if="{{selected}}" style="width:100%">
        <text wx:if="{{!toggle}}">全选</text>
        <text wx:if="{{toggle}}">全不选</text>
      </view>
    </cc-header>

    <ui-row-list class="list-content">
      <ui-row data-item="{{item}}" bindtap="item" height="114r" border-bottom
        wx:for="{{filelist}}" wx:key="{{index}}">
        <ui-col vertical-align="middle" width="123r" space-left="15">
          <i class="iconfont icon-file"></i>
        </ui-col>
        <ui-col class="text" vertical-align="middle">
          <view>{{item.name}}</view>
          <view class="desc">{{item.addTime}}</view>
        </ui-col>
        <ui-col width="40" vertical-align="middle" align="right" space-right="15" data-item="{{item}}" catchtap="checked">
          <icon type="circle" size="{{selected ? '16' : '10'}}" wx:if="{{!item._checked}}"></icon>
          <icon type="success" size="{{selected ? '16' : '10'}}" wx:if="{{item._checked}}"></icon>
        </ui-col>
      </ui-row>
      <ui-row data-item="{{item}}" data-index="{{index}}" bindtap="item" height="114r" border-bottom wx:for="{{list}}" wx:key="{{index}}">
        <ui-col vertical-align="middle" width="123r" space-left="15">
          <image mode="aspectFit" src="http://img.jihui88.com/{{item.serverPath}}"/>
        </ui-col>
        <ui-col class="text" vertical-align="middle">
          <view>
            <view class="title">{{item.filename}}</view>
            <view class="desc">{{item.uploadTime}}</view>
          </view>
        </ui-col>
        <ui-col width="40" vertical-align="middle" align="right" space-right="15" data-item="{{item}}" catchtap="checked">
          <icon type="circle" size="{{selected ? '16' : '10'}}" wx:if="{{!item._checked}}"></icon>
          <icon type="success" size="{{selected ? '16' : '10'}}" wx:if="{{item._checked}}"></icon>
        </ui-col>
      </ui-row>
    </ui-row-list>
    <view class="emtpy" wx:if="{{!more.loading && list.length === 0 && filelist.length === 0}}">
      哎呦，回收站是空的~
    </view>
    <cc-loadmore more="{{more}}"></cc-loadmore>

    <!-- 批量操作 -->
    <ui-fixed-view bottom="0;z-index:700" left="0" right="0" wx:if="{{selected}}">
      <ui-row height="60" border-top class="fixed_btn">
        <ui-col span="3" vertical-align="middle" align="center" bindtap="batchRestore">
          <i class="iconfont icon-fuzhi"></i>
          <view>还原</view>
        </ui-col>
        <ui-col span="3" vertical-align="middle" align="center" bindtap="batchDel">
          <i class="iconfont icon-delete-fill"></i>
          <view>删除</view>
        </ui-col>
        <ui-col span="3" vertical-align="middle" align="center" bindtap="cleanAll">
          <i class="iconfont icon-edit-fill"></i>
          <view>清空回收站</view>
        </ui-col>
      </ui-row>
    </ui-fixed-view>

  </view>
</template>

<script>
import api from '../../static/utils/api'
import Tips from '../../static/utils/tips'
import Utils from '../../static/utils/utils'
import regeneratorRuntime from 'regenerator-runtime'
export default {
  config: {
    usingComponents: {
      'cc-loadmore': '../../packages/cc-loadmore',
      'cc-header': '../../packages/cc-header',
      'cc-category': '../../packages/cc-category'
    }
  },
  data: {
    title: '回收站',
    // 文件
    filelist: [],
    catelog: [
      {name: '回收站', albumId: 'all'}
    ],
    catelogName: '',
    albumId: 'all',
    // 图片
    list: [],
    params: {
      page: 1,
      pageSize: 16
    },
    more: {loading: true},
    // 选中
    selected: false, //选中状态
    toggle: false, // 全选切换状态
    ids: '',
    fileids: ''
  },
  onLoad () {
    this.get()
  },
  // 图片
  get () {
    var field = 'params.endDate'
    this.data.more.tip = ''
    this.data.more.loading = true
    this.setData({
      ids: '',
      fileids: '',
      more: this.data.more
    })
    api.albumRecycle({
      data: {
        parentId: this.data.albumId
      }
    }).then(res => {
      if (res.success) {
        res.attributes.data.forEach(item => {
          item.addTime = Utils.formatTime(item.addTime)
          item._checked = false
        })
        this.setData({
          filelist: res.attributes.data
        })
      }
    })
    api.albumAttrRecycle({
      data: this.data.params,
      id: this.data.albumId
    }).then(res => {
      if (res.success) {
        res.attributes.data.forEach((item, index) => {
          item.uploadTime = Utils.formatTime(item.uploadTime)
          item._checked = false
        })
        Utils.scrollList(this, res, ' ')
      }
    })
  },
  back () {
    let file =this.data.catelog
    file.splice(file.length-1,1)
    let item = file[file.length-1]
    let name = ''
    if (file.length > 1) {
      name = file[file.length-2].name
    }
    var field = 'params.page'
    this.setData({
      list: [],
      [field]: 1,
      title: item.name,
      catelog: file,
      catelogName: name,
      albumId: file[file.length-1].albumId
    })
    this.get()
  },
  // 全选
  toggleAll () {
    let toggle = !this.data.toggle
    this.data.list.forEach(item => {
      item._checked = toggle
    })
    this.data.filelist.forEach(item => {
      item._checked = toggle
    })
    this.setData({
      list: this.data.list,
      filelist: this.data.filelist,
      toggle: toggle
    })
    if (!toggle) {
      this.selectedBack()
    }
    this.initSelcted()
  },
  selectedBack () {
    // 取消选中文件
    this.setData({
      selected: false,
      title: this.data.catelog[this.data.catelog.length-1].name
    })
  },
  checked (e) {
    let row = e.currentTarget.dataset.item
    if (row.albumId) {
      this.data.filelist.forEach(item => {
        if (item.albumId === row.albumId) {
          item._checked = !item._checked
        }
      })
    } else {
      this.data.list.forEach(item => {
        if (item.attId === row.attId) {
          item._checked = !item._checked
        }
      })
    }
    this.setData({
      filelist: this.data.filelist,
      list: this.data.list,
      currentItem: row,
      selected: true
    })
    this.initSelcted ()
  },
  initSelcted () {
    let ids = ''
    let fileids = ''
    this.data.list.forEach(item => {
      if (item._checked) {
        ids = ids ? (ids + ',' + item.attId) : item.attId
      }
    })
    this.data.filelist.forEach(item => {
      if (item._checked && !item.hideTime) {
        fileids = fileids ? (fileids + ',' + item.albumId) : item.albumId
      }
    })
    this.setData({
      ids: ids,
      fileids: fileids
    })
    let number = (ids ? ids.split(',').length : 0) + (fileids ? fileids.split(',').length : 0)
    if (this.data.selected) {
      this.setData({
        title: '已选择' + number + '个文件'
      })
    }
  },
  item (e) {
    let item = e.currentTarget.dataset.item
    let index = e.currentTarget.dataset.index
    if (this.data.selected) {
      this.selectedBack()
    } else if (item.attId) {
      /* 预览图片 */
      let src = 'http://img.jihui88.com/' + item.serverPath
      let urls = []
      urls.push(src)
      wx.previewImage({
        current: src, // 当前显示图片的http链接
        urls: urls // 需要预览的图片http链接列表
      })
    } else {
      this.data.filelist.forEach(item => {
        item._checked = false
      })
      // 选中文件
      let file = this.data.catelog
      let name = file[file.length-1].name
      file.push(item)
      this.setData({
        title: item.name,
        list: [],
        catelog: file,
        catelogName: name,
        albumId: item.albumId
      })
      this.get()
    }
  },
  // 批量
  batchRestore (e){
    if (!this.data.ids && !this.data.fileids) {
      return Tips.toast('未选择')
    }
    this.selectedBack()
    if (this.data.ids) {
      api.restoreImg({
        id: this.data.ids,
        method: 'post'
      }).then(res => {
        if (res.success) {
          if (!this.data.fileids) {
            this.restore()
          }
        } else {
          Tips.error(res.msg)
        }
      })
    }
    if (this.data.fileids) {
      api.restore({
        id: this.data.fileids,
        method: 'post'
      }).then(res => {
        if (res.success) {
          this.restore()
        } else {
          Tips.error(res.msg)
        }
      })
    }
  },
  restore () {
    Tips.success('还原成功')
    var field = 'params.page'
    this.setData({
      list: [],
      filelist: [],
      [field]: 1
    })
    this.get()
  },
  async batchDel () {
    if (!this.data.ids && !this.data.fileids) {
      return Tips.toast('未选择')
    }
    await Tips.confirm('确认删除吗？')
    this.selectedBack()
    if (this.data.ids) {
      api.attBatchDel({
        id: this.data.ids,
        method: 'post'
      }).then(res => {
        if (res.success) {
          if (!this.data.fileids) {
            this.batchDel2()
          }
        } else {
          Tips.error(res.msg)
        }
      })
    }
    if (this.data.fileids) {
      api.recycleDel({
        id: this.data.fileids,
        method: 'post'
      }).then(res => {
        if (res.success) {
          this.batchDel2()
        } else {
          Tips.error(res.msg)
        }
      })
    }
  },
  batchDel2 () {
    Tips.success('删除成功')
    var field = 'params.page'
    this.setData({
      fileids: [],
      list: [],
      [field]: 1
    })
    this.get()
  },
  async cleanAll () {
    await Tips.confirm('确认清空回收站吗？')
    this.selectedBack()
    api.attCleanAll({
      method: 'post'
    }).then(res => {
      if (res.success) {
        Tips.success('清空回收站成功')
        var field = 'params.page'
        this.setData({
          filelist: [],
          list: [],
          [field]: 1,
          catelog: [
            {name: '回收站', albumId: 'all'}
          ],
          catelogName: ''
        })
      } else {
        Tips.error(res.msg)
      }
    })
  },
  // 加载更多
  onReachBottom () {
    Utils.loadMore(this)
  }
}
</script>

<style lang="less">
page{
  background: #f1f1f1
}
.list-content {
  .ui-row:not(:last-child):after {
    left: 120rpx;
  }
  .icon-file{
    color: #79d3fb;
    font-size: 60rpx;
  }
  image{
    width:80%;
  }
  input{
    border:1px solid #e4e4e4;
    padding:3px 5px;
  }
}
// 搜索
.icon-paixu,.icon-folder-add{
  color:#4e4e4e;
  font-size: 44rpx;
  width:100%;
  &.active{
    color:#12bedb;
  }
}
.sort-list{
  .iconfont{
    color:#cfcdd1;font-size:42rpx;
  }
  .active{
    color:#12bedb;
  }
}
.add-content{
  text-align:left;margin:5px 15px;background:#f6f6f6;
  height: 64rpx;
  line-height: 64rpx;
  position: relative;
  .icon-close-circle-fill{
    width: 64rpx;
    height: 64rpx;
    line-height: 64rpx;
    font-size: 16px;
    text-align: center;
    color: #b5b3b6;
    position: absolute;
    right: 0;
    z-index: 3;
  }
  input{
    height: 64rpx;
    line-height: 64rpx;
    padding:0 15px;
    color:#060407
  }
  .icon-gou{
    color: #4c4c4c
  }
}
.emtpy{
  margin-top:50%;
  text-align:center;
  color:#b3b3b3
}

swiper{
  height: 100vh;
  .item{
    justify-content:center;
    height:100%;
    min-width:0;
    flex-direction:column;
    width:100%;
    display:flex;
  }
}
// pic detail
.mask_pic_detail{
  padding:0 15px;
  position:fixed;
  width:100%;
  bottom:40px;
  z-index: 999;
  color: #fff;
  font-size: 12px;
  .ui-row{
    padding-top: 10px;
  }
  .border{
    border-bottom: 1px solid #5b5b5b;
    margin: 15px 0;
  }
  .view{
    color: #646464;
  }
}
</style>
