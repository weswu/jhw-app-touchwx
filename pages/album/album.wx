<template>
  <view>
    <cc-header title="{{title}}" width="{{width}}" back="{{!selected}}">
      <text bindtap="back" wx:if="{{!selected}}">{{catelogName}}</text>
      <text bindtap="toggleAll" wx:if="{{selected && !toggle}}">全选</text>
      <text bindtap="toggleAll" wx:if="{{selected && toggle}}">全不选</text>
    </cc-header>
    <cc-search type="album" 
      value="{{params.filename}}"
      id="{{albumId}}"
      bindinput="input"
      bindchange="get">
        <i slot="add" class="iconfont icon-folder-add" bindtap="add"></i>
        <i slot="sort" class="iconfont icon-paixu {{show ? 'active' : ''}}" bindtap="openPopup"></i>
      </cc-search>

    <ui-row-list class="list-content">
      <ui-row data-item="{{item}}" bindtap="item" height="114r" border-bottom wx:for="{{filelist}}" wx:key="*this" wx:if="{{item.parentId === albumId}}">
        <ui-col vertical-align="middle" width="123r" space-left="15">
          <i class="iconfont icon-file"></i>
        </ui-col>
        <ui-col class="text" vertical-align="middle">
          <view  wx:if="{{!item.editing}}">{{item.name}}</view>
          <input bindinput="input" value="{{item.name}}" wx:if="{{item.editing}}"/>
        </ui-col>
        <ui-col width="40" vertical-align="middle" align="center" wx:if="{{item.editing}}" data-item="{{item}}" catchtap="nameChange">
          <i class="iconfont icon-gou"></i>
        </ui-col>
        <ui-col width="40" vertical-align="middle" align="right" space-right="15" data-item="{{item}}" catchtap="checked"
          wx:if="{{item.name !== '[系统]微信小程序Banner相册' && item.name !== '首页大广告图' && item.name !== '产品图片' && item.name !== '新闻图片' && item.name !== '默认相册'}}">
          <icon type="circle" size="10" wx:if="{{!item._checked}}"></icon>
          <icon type="success" size="10" wx:if="{{item._checked}}"></icon>
        </ui-col>
      </ui-row>
      <ui-row data-item="{{item}}" data-index="{{index}}" bindtap="item" height="114r" border-bottom wx:for="{{list}}" wx:key="*this">
        <ui-col vertical-align="middle" width="123r" space-left="15">
          <image mode="aspectFit" src="http://img.jihui88.com/{{item.serverPath}}"/>
        </ui-col>
        <ui-col class="text" vertical-align="middle">
          <view>
            <view class="title" wx:if="{{!item.editing}}">{{item.filename}}</view>
            <view class="desc" wx:if="{{!item.editing}}">{{item.uploadTime}}</view>
          <input bindinput="input" value="{{item.filename}}" wx:if="{{item.editing}}"/>
          </view>
        </ui-col>
        <ui-col width="40" vertical-align="middle" align="center" wx:if="{{item.editing}}" data-item="{{item}}" catchtap="imgNameChange">
          <i class="iconfont icon-gou"></i>
        </ui-col>
        <ui-col width="40" vertical-align="middle" align="right" space-right="15" data-item="{{item}}" catchtap="checked">
          <icon type="circle" size="10" wx:if="{{!item._checked}}"></icon>
          <icon type="success" size="10" wx:if="{{item._checked}}"></icon>
        </ui-col>
      </ui-row>
    </ui-row-list>
    <view class="emtpy" wx:if="{{!more.loading && list.length === 0 && !fileItem.isroot}}">
      哎呦，文件夹是空的~
    </view>
    <cc-loadmore more="{{more}}"></cc-loadmore>

    <cc-modal title="新建文件夹" visible="{{ visible1 }}" bind:ok="ok" bind:cancel="cancel">
      <view class="add-content">
        <i class="iconfont icon-close-circle-fill" bindtap="clearinput" wx:if="{{name}}"></i>
        <input type="text" value="{{name}}" bindinput="nameInput"/>
      </view>
    </cc-modal>
    <!-- 排序 -->
    <ui-popup cropout show="{{ show }}" position="top" top="{{ popup_NAV_HEIGHT +43 }}" height="{{ popupHeight }}" mask-style="{{ { top: popup_NAV_HEIGHT +43+'px' } }}" bindhide="popHide" bindshow="popShow">
      <ui-row-list border-left-indent class="sort-list">
        <ui-row height="43" border-bottom wx:for="{{sortList}}" wx:key="*this" data-item="{{item}}" bindtap="sortChange">
          <ui-col vertical-align="middle" class="{{params.sortField === item.value ? 'active' : ''}}">
            {{item.text}}
          </ui-col>
          <ui-col vertical-align="middle" align="center" width="40">
            <i class="iconfont icon-vertical-align-botto {{params.sortType === 'asc' && params.sortField === item.value ? 'active' : ''}}"/>
          </ui-col>
          <ui-col vertical-align="middle" align="center" width="40" space-right="15">
            <i class="iconfont icon-vertical-align-top {{params.sortType === 'desc' && params.sortField === item.value ? 'active' : ''}}"/>
          </ui-col>
        </ui-row>
      </ui-row-list>
    </ui-popup>
    
    <!-- 批量操作 -->
    <ui-fixed-view bottom="0;z-index:700" left="0" right="0" wx:if="{{selected}}">
      <ui-row height="60" border-top class="fixed_btn">
        <ui-col span="3" vertical-align="middle" align="center" bindtap="batchCopy">
          <i class="iconfont icon-fuzhi"></i>
          <view>复制</view>
        </ui-col>
        <ui-col span="3" vertical-align="middle" align="center">
          <cc-category title="{{false}}" type="album" categoryList="{{filelist}}" bindchange="batchMove">
            <i class="iconfont icon-folder-add-fill2"></i>
            <view>移动</view>
          </cc-category>
        </ui-col>
        <ui-col span="3" vertical-align="middle" align="center" bindtap="rename">
          <i class="iconfont icon-edit-fill"></i>
          <view>重命名</view>
        </ui-col>
        <ui-col span="3" vertical-align="middle" align="center" bindtap="batchDel">
          <i class="iconfont icon-delete-fill"></i>
          <view>删除</view>
        </ui-col>
      </ui-row>
    </ui-fixed-view>

    <!-- 图片展示 -->
    <ui-mask show="{{picMask}}" top="{{NAV_HEIGHT}}" custom-style="{{ {background:'#000',zIndex:'699'} }}" bindtap="hidePicMask">
      <view class="content">
        <swiper bindchange="swiperChange" current="{{swiperCurrent}}"
        autoplay="{{false}}" circular interval="3000" duration="500">
          <block wx:for="{{list}}" wx:key="*this">
            <swiper-item>
              <view class="item" style="height:{{popupHeight-80}}px">
                <image mode="widthFix" src="http://img.jihui88.com/{{item.serverPath}}" data-index="{{index}}" bindload="imageLoad"/>
              </view>
            </swiper-item>
          </block>
        </swiper>
      </view>
    </ui-mask>
    <!-- 图片操作 -->
    <ui-fixed-view bottom="0px;z-index:700;background:#fff;" left="0" right="0" wx:if="{{picMask && !picDetailMask}}">
      <ui-row height="60" border-top class="fixed_btn">
        <ui-col span="3" vertical-align="middle" align="center" bindtap="downloadPic">
          <i class="iconfont icon-fuzhi"></i>
          <view class="desc">下载</view>
        </ui-col>
        <ui-col span="3" vertical-align="middle" align="center" bindtap="picDetail">
          <i class="iconfont icon-folder-add-fill2"></i>
          <view class="desc">详情</view>
        </ui-col>
        <ui-col span="3" vertical-align="middle" align="center" bindtap="delPic">
          <i class="iconfont icon-delete-fill"></i>
          <view class="desc">删除</view>
        </ui-col>
        <ui-col span="3" vertical-align="middle" align="center" data-show="{{ true }}" bindtap="more">
          <i class="iconfont icon-gengduo"></i>
          <view class="desc">更多</view>
        </ui-col>
      </ui-row>
    </ui-fixed-view>
    <ui-mask show="{{showMask}}" hide-delay="500">
      <view class="mask_btn">
        <view class="btn">
          <view bindtap="uploadPic">替换图片</view>
          <view bindtap="editPic">编辑</view>
          <view bindtap="copyImg1">复制图片的代码</view>
          <view bindtap="copyImg2">复制链接的代码</view>
        </view>
        <button data-show="{{ false }}" bindtap="more">取消</button>
      </view>
    </ui-mask>
    <!-- 图片详情 -->
    <ui-mask show="{{picDetailMask}}" top="{{NAV_HEIGHT}}" bindtap="hidepicDetailMask">
      <view class="mask_pic_detail">
        {{list[swiperCurrent].uploadTime}}
        <ui-row height="70">
          <ui-col span="7" vertical-align="top" align="left">
            <view style="width:100%"><text wx:for="{{catelog}}" wx:key="*this">/{{item.name}}</text>/{{list[swiperCurrent].filename}}</view>
          </ui-col>
          <ui-col span="5" vertical-align="top" align="right" class="view" bindtap="backcatelog">
            <view style="width:100%">查看所有目录<i class="iconfont icon-right"></i></view>
          </ui-col>
        </ui-row>
        <view class="border"></view>
        <view style="display:none">大小：5.28M</view>
        尺寸：{{list[swiperCurrent].width}}*{{list[swiperCurrent].width}}
      </view>
    </ui-mask>
  </view>
</template>

<script>
import api from '../../static/utils/api'
import Tips from '../../static/utils/tips'
import Utils from '../../static/utils/utils'
export default {
  config: {
    usingComponents: {
      'cc-loadmore': '../../packages/cc-loadmore',
      'cc-header': '../../packages/cc-header',
      'cc-search': '../../packages/cc-search',
      'cc-modal': '../../packages/cc-modal',
      'cc-category': '../../packages/cc-category'
    }
  },
  data: {
    NAV_HEIGHT:wx.STATUS_BAR_HEIGHT+wx.DEFAULT_HEADER_HEIGHT,
    // 下拉
    popup_NAV_HEIGHT:wx.STATUS_BAR_HEIGHT+wx.DEFAULT_HEADER_HEIGHT,
    popupHeight: wx.WIN_HEIGHT - (wx.STATUS_BAR_HEIGHT + wx.DEFAULT_HEADER_HEIGHT),
    show: false,
    sortList: [
      { value: 'sort', text: '默认' },
      { value: 'uploadTime', text: '时间' },
      { value: 'filename', text: '名称' }
    ],
    title: '相册管理',
    // 新增文件夹
    visible1: false,
    name: '',
    // 文件
    filelist: [],
    catelog: [
      {name: '相册管理', albumId: 'all'}
    ],
    catelogName: '',
    albumId: 'all',
    fileItem: {},
    // 图片
    list: [],
    params: {
      page: 1,
      pageSize: 16,
      filename: '',
      sortField: 'sort',
      searchType: '1',
      sortType: 'desc'
    },
    more: {loading: true},
    // 图片展示
    picMask: false,
    swiperCurrent: 0,
    showMask: false,
    picDetailMask: false,
    width: '220r',
    // 选中
    toggle: false,
    ids: '',
    fileids: '',
    // 选择项
    currentItem: {}
  },
  onLoad () {
    this.getAlbum()
    // this.get()
  },
  getAlbum () {
    let that = this
    this.setData({
      ids: '',
      fileids: ''
    })
    getApp().getAlbumCategory(res => {
      that.setData({
        filelist: res
      })
    })
  },
  // 图片
  get () {
    this.setData({
      ids: '',
      fileids: '',
      'more.tip': '',
      'more.loading': true
    })
    api.albumAttr({
      data: this.data.params,
      id: this.data.albumId
    }).then(res => {
      if (res.success) {
        res.attributes.data.forEach((item, index) => {
          item.uploadTime = Utils.formatTime(item.uploadTime)
          item.name = item.filename.split('.')[0]
          item._checked = false
          item.editing = false
          item.index = index
        })
        Utils.scrollList(this, res, ' ')
      }
    })
  },
  back () {
    if (this.data.picMask) {
      this.hidePicMask()
    } else {
      let file =this.data.catelog
      file.splice(file.length-1,1)
      let item = file[file.length-1]
      let name = ''
      if (file.length > 1) {
        name = file[file.length-2].name
      }
      this.setData({
        list: [],
        'params.page': 1,
        title: item.name,
        catelog: file,
        catelogName: name,
        albumId: file[file.length-1].albumId
      })
      this.get()
    }
  },
  // add 
  add () {
    this.setData({
      visible1: true
    })
  },
  nameInput (e) {
    this.setData({
      name: e.detail.value
    })
  },
  clearinput () {
    this.setData({
      name: ''
    })
  },
  cancel () {
    this.setData({
      visible1: false
    })
  },
  // 添加相册
  ok () {
    api.albumDetail({
      data: {
        model: JSON.stringify({
          name: this.data.name,
          parentId: this.data.albumId,
          blongType: 'AP',
          state: '01'
        })
      },
      method: 'POST'
    }).then(res => {
      if (res.success) {
        Tips.success('添加成功')
        this.cancel()
        this.getAlbum()
      } else {
        Tips.error(res.msg)
      }
    })
  },
  // 排序下拉
  openPopup () {
    this.setData({
      show: !this.data.show
    })
  },
  popHide () {
    this.setData({
      show:false
    })
  },
  popShow () {
    this.setData({
      show:true
    })
  },
  sortChange (e) {
    let item = e.currentTarget.dataset.item
    let params = this.data.params
    if (params.sortField === item.value) {
      params.sortType = params.sortType === 'desc' ? 'asc' : 'desc'
    } else {
      params.sortField = item.value
    }
    params.page = 1
    this.setData({
      params: params,
      list: [],
      show:false
    })
    this.get()
  },
  // 搜索
  input (e) {
    this.setData({
      'params.filename': e.detail
    })
    this.get()
  },
  // 全选
  toggleAll () {
    let toggle = !this.data.toggle
    this.data.list.forEach(item => {
      item._checked = toggle
    })
    this.data.filelist.forEach(item => {
      item._checked = toggle
    })
    this.setData({
      list: this.data.list,
      filelist: this.data.filelist,
      toggle: toggle
    })
    this.initSelcted()
  },
  checked (e) {
    let row = e.currentTarget.dataset.item
    if (row.albumId) {
      this.data.filelist.forEach(item => {
        if (item.albumId === row.albumId) {
          item._checked = !item._checked
        }
      })
    } else {
      this.data.list.forEach(item => {
        if (item.attId === row.attId) {
          item._checked = !item._checked
        }
      })
    }
    this.setData({
      filelist: this.data.filelist,
      list: this.data.list,
      currentItem: row,
      selected: true
    })
    this.initSelcted ()
  },
  initSelcted () {
    let ids = ''
    let fileids = ''
    this.data.list.forEach(item => {
      if (item._checked) {
        ids = ids ? (ids + ',' + item.attId) : item.attId
      }
    })
    this.data.filelist.forEach(item => {
      if (item._checked && item.name !== '[系统]微信小程序Banner相册' && item.name !== '首页大广告图' && item.name !== '产品图片' && item.name !== '新闻图片' && item.name !== '默认相册') {
        fileids = fileids ? (fileids + ',' + item.albumId) : item.albumId
      }
    })
    this.setData({
      ids: ids,
      fileids: fileids
    })
    let number = (ids ? ids.split(',').length : 0) + (fileids ? fileids.split(',').length : 0)
    if (this.data.selected) {
      this.setData({
        title: '已选择' + number + '个文件'
      })
    }
  },
  item (e) {
    let item = e.currentTarget.dataset.item
    let index = e.currentTarget.dataset.index
    if (this.data.selected) {
      // 取消选中文件
      let title = '相册管理'
      this.data.filelist.forEach(item => {
        if (item.albumId === this.data.albumId) {
          title = item.name
        }
      })
      this.setData({
        selected: false,
        title: title
      })
    } else if (item.attId) {
      /* 预览图片 */
      this.setData({
        picMask: true,
        title: (index + 1) + '/' + this.data.list.length,
        swiperCurrent: index,
        catelogName: this.data.catelog[this.data.catelog.length-1].name,
        width: '350r'
      })
    } else {
      this.data.filelist.forEach(item => {
        item._checked = false
      })
      // 选中文件
      let file = this.data.catelog
      let name = file[file.length-1].name
      file.push(item)
      this.setData({
        title: item.name,
        list: [],
        catelog: file,
        catelogName: name,
        albumId: item.albumId,
        fileItem: item
      })
      this.get()
    }
  },
  // 预览图片左右移动
  swiperChange (e){
    let index = e.detail.current
    this.setData({
      swiperCurrent: index,
      title: (index + 1) + '/' + this.data.list.length,
      item: this.data.list[index]
    })
  },
  // 单张图片操作
  downloadPic () {
    // 下载图片
    wx.downloadFile({
      url: 'http://img.jihui88.com/' + this.data.item.serverPath, //仅为示例，并非真实的资源
      success: function(res) {
        // 只要服务器有响应数据，就会把响应内容写入文件并进入 success 回调，业务需要自行判断是否下载到了想要的内容
        if (res.statusCode === 200) {
          wx.saveImageToPhotosAlbum({
            filePath: res.tempFilePath,
            success(res) {
              Tips.success('下载成功')
            }
          })
        }
      }
    })
  },
  imageLoad: function (e) {
    let item = e.currentTarget.dataset.item
    let index = e.currentTarget.dataset.index
    this.data.list[index].width = e.detail.width
    this.data.list[index].height = e.detail.height
    this.setData({
      list: this.data.list
    })
  },
  delPic () {
    api.imgDel({
      data: {attIds: this.data.list[this.data.swiperCurrent].attId},
      method: 'post'
    }).then(res => {
      if (res.success) {
        this.data.list.splice(this.data.swiperCurrent, 1)
        Tips.success('删除成功')
        this.setData({
          list: this.data.list,
          title: (this.data.swiperCurrent + 1) + '/' + this.data.list.length
        })
      } else {
        Tips.error(res.msg)
      }
    })
  },
  hidepicDetailMask () {
    this.setData({
      picDetailMask: false
    })
  },
  picDetail () {
    this.setData({
      picDetailMask: true
    })
  },
  backcatelog () {
    this.setData({
      picDetailMask: false
    })
    this.hidePicMask()
  },
  uploadPic () {
    let img = this.data.list[this.data.swiperCurrent]
    Utils.upload({
      attId: img.attId,
      replace: '01'
    }).then(res => {
      Tips.success('替换成功,图片1分钟左右生效')
      this.refurbish()
    })
  },
  refurbish () {
    let img = this.data.list[this.data.swiperCurrent]
    let data = {
      serverPath: img.serverPath
    }
    api.refurbish({
      data: data,
      method: 'post'
    }).then(res => {
      this.data.list[this.data.swiperCurrent].serverPath = img.serverPath + '?0'
      this.setData({
        list: this.data.list
      })
    })
  },
  editPic () {
    
  },
  copyImg1 () {
    let img = this.data.list[this.data.swiperCurrent]
    wx.setClipboardData({
      data: '<img src="http://img.jihui88.com/' + img.serverPath + '" alt="' + img.filename + '">',
      success: function(res) {
        Tips.success('复制成功')
      }
    })
  },
  copyImg2 () {
    let img = this.data.list[this.data.swiperCurrent]
    wx.setClipboardData({
      data: 'http://img.jihui88.com/' + img.serverPath,
      success: function(res) {
        Tips.success('复制成功')
      }
    })
  },
  more (e) {
    let show = e.currentTarget.dataset.show
    this.setData({
      showMask: show
    })
  },
  hidePicMask () {
    let file = this.data.catelog
    let name = ''
    let title = file[file.length-1].name
    if (file.length > 1) {
      name = file[file.length-2].name
    }
    this.setData({
      picMask: false,
      picDetailMask: false,
      title: title,
      catelogName: name,
      width: '220r'
    })
  },
  // 批量
  batchCopy () {
    if (!this.data.ids && !this.data.fileids) {
      return Tips.toast('未选择')
    }
    this.setData({
      selected: false,
      title: this.data.catelog[this.data.catelog.length-1].name
    })
    if (this.data.ids) {
      api.imgCopy({
        data: {attIds: this.data.ids},
        method: 'post'
      }).then(res => {
        if (res.success) {
          Tips.success('复制成功')
          this.setData({
            list: [],
            'params.page': 1
          })
          this.get()
        } else {
          Tips.error(res.msg)
        }
      })
    }
    if (this.data.fileids) {
      let ids = this.data.fileids.split(',')
      ids.forEach((id, index) => {
        api.albumCopy({
          data: {albumId: id},
          method: 'post'
        }).then(res => {
          if (res.success) {
            Tips.success('复制成功')
            if (ids.length === index + 1) {
              this.getAlbum()
            }
          } else {
            Tips.error(res.msg)
          }
        })
      })
    }
  },
  batchMove (e) {
    if (!this.data.ids && !this.data.fileids) {
      return Tips.toast('未选择')
    }
    this.setData({
      selected: false,
      title: this.data.catelog[this.data.catelog.length-1].name
    })
    if (this.data.ids) {
      api.imgMove({
        data: {
          attIds: this.data.ids,
          belongId: e.detail
        },
        method: 'post'
      }).then(res => {
        if (res.success) {
          Tips.success('图片移动成功')
          this.setData({
            list: [],
            'params.page': 1
          })
          this.get()
        } else {
          Tips.error(res.msg)
        }
      })
    }
    if (this.data.fileids) {
      let data = {
        model: JSON.stringify({
          parentId: e.detail
        }),
        _method: 'put'
      }
      let ids = this.data.fileids.split(',')
      ids.forEach((id, index) => {
        api.albumDetail({
          data: data,
          id: id,
          method: 'post'
        }).then(res => {
          if (res.success) {
            if (ids.length === index + 1) {
              Tips.success('相册转移成功')
              this.getAlbum()
            }
          } else {
            Tips.error(res.msg)
          }
        })
      })
    }
  },
  rename (e) {
    this.data.list.forEach(item => {
      item.editing = false
    })
    this.data.filelist.forEach(item => {
      item.editing = false
    })
    if (e === 'done') {
      if (this.data.currentItem.attId) {
        this.data.list[this.data.currentItem.index] = this.data.currentItem
      }
      if (this.data.currentItem.albumId) {
        this.data.filelist[this.data.currentItem.index] = this.data.currentItem
      }
    } else {
      if (this.data.currentItem.attId) {
        this.data.list[this.data.currentItem.index].editing = true
      }
      if (this.data.currentItem.albumId) {
        this.data.filelist[this.data.currentItem.index].editing = true
      }
    }
    this.setData({
      list: this.data.list
    })
    this.setData({
      filelist: this.data.filelist
    })
  },
  input (e) {
    if (this.data.currentItem.attId) {
      this.data.currentItem.filename = e.detail.value
    }
    if (this.data.currentItem.albumId) {
      this.data.currentItem.name = e.detail.value
    }
  },
  nameChange (e) {
    let item = e.currentTarget.dataset.item
    let data = {
      model: JSON.stringify({
        id: item.albumId,
        name: this.data.currentItem.name
      }),
      _method: 'put'
    }
    api.albumDetail({
      data: data,
      id: item.albumId,
      method: 'POST'
    }).then(res => {
      if (res.success) {
        Tips.success('修改成功')
      } else {
        Tips.error(res.msg)
      }
    })
    this.rename('done')
  },
  imgNameChange (e) {
    let item = e.currentTarget.dataset.item
    let data = {
      model: JSON.stringify({
        id: item.attId,
        filename: this.data.currentItem.filename,
        editField: true
      }),
      _method: 'put'
    }
    api.imgDetail({
      data: data,
      id: item.attId,
      method: 'POST'
    }).then(res => {
      if (res.success) {
        Tips.success('修改成功')
      } else {
        Tips.error(res.msg)
      }
    })
    this.rename('done')
  },
  batchDel () {
    if (!this.data.ids && !this.data.fileids) {
      return Tips.toast('未选择')
    }
    this.setData({
      selected: false,
      title: this.data.catelog[this.data.catelog.length-1].name
    })
    if (this.data.ids) {
      api.imgDel({
        data: {attIds: this.data.ids},
        method: 'post'
      }).then(res => {
        if (res.success) {
          Tips.success('删除成功')
          this.setData({
            list: [],
            'params.page': 1
          })
          this.get()
        } else {
          Tips.error(res.msg)
        }
      })
    }
    if (this.data.fileids) {
      let ids = this.data.fileids.split(',')
      ids.forEach((id, index) => {
        api.albumDetail({
          data: {
            _method: 'delete'
          },
          id: id,
          method: 'post'
        }).then(res => {
          if (res.success) {
            Tips.success('删除成功')
            if (ids.length === index + 1) {
              this.getAlbum()
            }
          } else {
            Tips.error(res.msg)
          }
        })
      })
    }
  },
  // 加载更多
  onReachBottom () {
    Utils.loadMore(this)
  }
}
</script>

<style lang="less">
.list-content {
  .ui-row:not(:last-child):after {
    left: 120rpx;
  }
  .icon-file{
    color: #79d3fb;
    font-size: 60rpx;
  }
  image{
    width:80%;
  }
  input{
    border:1px solid #e4e4e4;
    padding:3px 5px;
  }
}
// 搜索
.icon-paixu,.icon-folder-add{
  color:#4e4e4e;
  font-size: 44rpx;
  width:100%;
  &.active{
    color:#12bedb;
  }
}
.sort-list{
  .iconfont{
    color:#cfcdd1;font-size:42rpx;
  }
  .active{
    color:#12bedb;
  }
}
.add-content{
  text-align:left;margin:5px 15px;background:#f6f6f6;
  height: 64rpx;
  line-height: 64rpx;    
  position: relative;
  .icon-close-circle-fill{
    width: 64rpx;
    height: 64rpx;
    line-height: 64rpx;
    font-size: 16px;
    text-align: center;
    color: #b5b3b6;
    position: absolute;
    right: 0;
    z-index: 3;
  }
  input{
    height: 64rpx;
    line-height: 64rpx;
    padding:0 15px;
    color:#060407
  }
  .icon-gou{
    color: #4c4c4c
  }
}
.emtpy{
  margin-top:50%;
  text-align:center;
  color:#b3b3b3
}

swiper{
  height: 100vh;
  .item{
    justify-content:center;
    height:100%;
    min-width:0;
    flex-direction:column;
    width:100%;
    display:flex;
  }
}
// pic detail
.mask_pic_detail{
  padding:0 15px;
  position:fixed;
  width:100%;
  bottom:40px;
  z-index: 999;
  color: #fff;
  font-size: 12px;
  .ui-row{
    padding-top: 10px;
  }
  .border{
    border-bottom: 1px solid #5b5b5b;
    margin: 15px 0;
  }
  .view{
    color: #646464;
  }
}
</style>
